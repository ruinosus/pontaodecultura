#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PontaoCanavial.Models.VOs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PontaoCanavialDB")]
	public partial class PontaoCanavialDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertEvento(Evento instance);
    partial void UpdateEvento(Evento instance);
    partial void DeleteEvento(Evento instance);
    partial void InsertGaleria(Galeria instance);
    partial void UpdateGaleria(Galeria instance);
    partial void DeleteGaleria(Galeria instance);
    partial void InsertImagem(Imagem instance);
    partial void UpdateImagem(Imagem instance);
    partial void DeleteImagem(Imagem instance);
    partial void InsertNewsletter(Newsletter instance);
    partial void UpdateNewsletter(Newsletter instance);
    partial void DeleteNewsletter(Newsletter instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertPonto(Ponto instance);
    partial void UpdatePonto(Ponto instance);
    partial void DeletePonto(Ponto instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertProjeto(Projeto instance);
    partial void UpdateProjeto(Projeto instance);
    partial void DeleteProjeto(Projeto instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertUsuarioPonto(UsuarioPonto instance);
    partial void UpdateUsuarioPonto(UsuarioPonto instance);
    partial void DeleteUsuarioPonto(UsuarioPonto instance);
    #endregion
		
		public PontaoCanavialDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PontaoCanavialDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PontaoCanavialDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PontaoCanavialDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PontaoCanavialDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PontaoCanavialDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Banner> Banner
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Video> Video
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Evento> Evento
		{
			get
			{
				return this.GetTable<Evento>();
			}
		}
		
		public System.Data.Linq.Table<Galeria> Galeria
		{
			get
			{
				return this.GetTable<Galeria>();
			}
		}
		
		public System.Data.Linq.Table<Imagem> Imagem
		{
			get
			{
				return this.GetTable<Imagem>();
			}
		}
		
		public System.Data.Linq.Table<Newsletter> Newsletter
		{
			get
			{
				return this.GetTable<Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticia
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Ponto> Ponto
		{
			get
			{
				return this.GetTable<Ponto>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produto
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Projeto> Projeto
		{
			get
			{
				return this.GetTable<Projeto>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioPonto> UsuarioPonto
		{
			get
			{
				return this.GetTable<UsuarioPonto>();
			}
		}
	}
	
	[Table(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private string _Nome;
		
		private System.Nullable<int> _StatusBanner;
		
		private System.Nullable<int> _Localizacao;
		
		private System.Data.Linq.Binary _Corpo;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnStatusBannerChanging(System.Nullable<int> value);
    partial void OnStatusBannerChanged();
    partial void OnLocalizacaoChanging(System.Nullable<int> value);
    partial void OnLocalizacaoChanged();
    partial void OnCorpoChanging(System.Data.Linq.Binary value);
    partial void OnCorpoChanged();
    #endregion
		
		public Banner()
		{
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(255)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_StatusBanner", DbType="Int")]
		public System.Nullable<int> StatusBanner
		{
			get
			{
				return this._StatusBanner;
			}
			set
			{
				if ((this._StatusBanner != value))
				{
					this.OnStatusBannerChanging(value);
					this.SendPropertyChanging();
					this._StatusBanner = value;
					this.SendPropertyChanged("StatusBanner");
					this.OnStatusBannerChanged();
				}
			}
		}
		
		[Column(Storage="_Localizacao", DbType="Int")]
		public System.Nullable<int> Localizacao
		{
			get
			{
				return this._Localizacao;
			}
			set
			{
				if ((this._Localizacao != value))
				{
					this.OnLocalizacaoChanging(value);
					this.SendPropertyChanging();
					this._Localizacao = value;
					this.SendPropertyChanged("Localizacao");
					this.OnLocalizacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Corpo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Corpo
		{
			get
			{
				return this._Corpo;
			}
			set
			{
				if ((this._Corpo != value))
				{
					this.OnCorpoChanging(value);
					this.SendPropertyChanging();
					this._Corpo = value;
					this.SendPropertyChanged("Corpo");
					this.OnCorpoChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Banner", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Banner.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Banner.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Titulo;
		
		private string _Conteudo;
		
		private System.Nullable<int> _PontoId;
		
		private string _Descricao;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnConteudoChanging(string value);
    partial void OnConteudoChanged();
    partial void OnPontoIdChanging(System.Nullable<int> value);
    partial void OnPontoIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Video()
		{
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Titulo", DbType="VarChar(8000)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[Column(Storage="_Conteudo", DbType="VarChar(8000)")]
		public string Conteudo
		{
			get
			{
				return this._Conteudo;
			}
			set
			{
				if ((this._Conteudo != value))
				{
					this.OnConteudoChanging(value);
					this.SendPropertyChanging();
					this._Conteudo = value;
					this.SendPropertyChanged("Conteudo");
					this.OnConteudoChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int")]
		public System.Nullable<int> PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(8000)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Video", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Video.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Video.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Categoria()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(25)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Association(Name="Categoria_Produto", Storage="_Produto", ThisKey="Id", OtherKey="CategoriaId")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[Table(Name="dbo.Evento")]
	public partial class Evento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private string _Nome;
		
		private System.Nullable<System.DateTime> _Data;
		
		private string _Descricao;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    #endregion
		
		public Evento()
		{
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(5000)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Evento", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Evento.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Evento.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Galeria")]
	public partial class Galeria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private string _Nome;
		
		private string _Descricao;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private EntitySet<Imagem> _Imagem;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    #endregion
		
		public Galeria()
		{
			this._Imagem = new EntitySet<Imagem>(new Action<Imagem>(this.attach_Imagem), new Action<Imagem>(this.detach_Imagem));
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(8000)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(8000)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Association(Name="Galeria_Imagem", Storage="_Imagem", ThisKey="Id", OtherKey="GaleriaId")]
		public EntitySet<Imagem> Imagem
		{
			get
			{
				return this._Imagem;
			}
			set
			{
				this._Imagem.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Galeria", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Galeria.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Galeria.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagem(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Galeria = this;
		}
		
		private void detach_Imagem(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Galeria = null;
		}
	}
	
	[Table(Name="dbo.Imagem")]
	public partial class Imagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GaleriaId;
		
		private string _Nome;
		
		private string _Descricao;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private EntityRef<Galeria> _Galeria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGaleriaIdChanging(int value);
    partial void OnGaleriaIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    #endregion
		
		public Imagem()
		{
			this._Galeria = default(EntityRef<Galeria>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_GaleriaId", DbType="Int NOT NULL")]
		public int GaleriaId
		{
			get
			{
				return this._GaleriaId;
			}
			set
			{
				if ((this._GaleriaId != value))
				{
					if (this._Galeria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGaleriaIdChanging(value);
					this.SendPropertyChanging();
					this._GaleriaId = value;
					this.SendPropertyChanged("GaleriaId");
					this.OnGaleriaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(255)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Association(Name="Galeria_Imagem", Storage="_Galeria", ThisKey="GaleriaId", OtherKey="Id", IsForeignKey=true)]
		public Galeria Galeria
		{
			get
			{
				return this._Galeria.Entity;
			}
			set
			{
				Galeria previousValue = this._Galeria.Entity;
				if (((previousValue != value) 
							|| (this._Galeria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Galeria.Entity = null;
						previousValue.Imagem.Remove(this);
					}
					this._Galeria.Entity = value;
					if ((value != null))
					{
						value.Imagem.Add(this);
						this._GaleriaId = value.Id;
					}
					else
					{
						this._GaleriaId = default(int);
					}
					this.SendPropertyChanged("Galeria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Newsletter")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private string _Email;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Newsletter()
		{
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Newsletter", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Newsletter.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Newsletter.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private string _Titulo;
		
		private System.Nullable<System.DateTime> _DataCriacao;
		
		private string _Preview;
		
		private string _Corpo;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private System.Nullable<int> _UsuarioId;
		
		private EntityRef<Ponto> _Ponto;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDataCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataCriacaoChanged();
    partial void OnPreviewChanging(string value);
    partial void OnPreviewChanged();
    partial void OnCorpoChanging(string value);
    partial void OnCorpoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    partial void OnUsuarioIdChanging(System.Nullable<int> value);
    partial void OnUsuarioIdChanged();
    #endregion
		
		public Noticia()
		{
			this._Ponto = default(EntityRef<Ponto>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Titulo", DbType="VarChar(255)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[Column(Storage="_DataCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataCriacao
		{
			get
			{
				return this._DataCriacao;
			}
			set
			{
				if ((this._DataCriacao != value))
				{
					this.OnDataCriacaoChanging(value);
					this.SendPropertyChanging();
					this._DataCriacao = value;
					this.SendPropertyChanged("DataCriacao");
					this.OnDataCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Preview", DbType="VarChar(255)")]
		public string Preview
		{
			get
			{
				return this._Preview;
			}
			set
			{
				if ((this._Preview != value))
				{
					this.OnPreviewChanging(value);
					this.SendPropertyChanging();
					this._Preview = value;
					this.SendPropertyChanged("Preview");
					this.OnPreviewChanged();
				}
			}
		}
		
		[Column(Storage="_Corpo", DbType="VarChar(8000)")]
		public string Corpo
		{
			get
			{
				return this._Corpo;
			}
			set
			{
				if ((this._Corpo != value))
				{
					this.OnCorpoChanging(value);
					this.SendPropertyChanging();
					this._Corpo = value;
					this.SendPropertyChanged("Corpo");
					this.OnCorpoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Column(Storage="_UsuarioId", DbType="Int")]
		public System.Nullable<int> UsuarioId
		{
			get
			{
				return this._UsuarioId;
			}
			set
			{
				if ((this._UsuarioId != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIdChanging(value);
					this.SendPropertyChanging();
					this._UsuarioId = value;
					this.SendPropertyChanged("UsuarioId");
					this.OnUsuarioIdChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Noticia", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		[Association(Name="Usuario_Noticia", Storage="_Usuario", ThisKey="UsuarioId", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._UsuarioId = value.Id;
					}
					else
					{
						this._UsuarioId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Ponto")]
	public partial class Ponto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _NomeIdentificador;
		
		private System.Nullable<bool> _EPontao;
		
		private System.Data.Linq.Binary _Logo;
		
		private System.Data.Linq.Binary _Cabecalho;
		
		private string _Objetivo;
		
		private string _Justificativa;
		
		private string _Equipe;
		
		private string _Apresentacao;
		
		private string _Contato;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private EntitySet<Banner> _Banner;
		
		private EntitySet<Video> _Video;
		
		private EntitySet<Evento> _Evento;
		
		private EntitySet<Galeria> _Galeria;
		
		private EntitySet<Newsletter> _Newsletter;
		
		private EntitySet<Noticia> _Noticia;
		
		private EntitySet<Produto> _Produto;
		
		private EntitySet<Projeto> _Projeto;
		
		private EntitySet<UsuarioPonto> _UsuarioPonto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnNomeIdentificadorChanging(string value);
    partial void OnNomeIdentificadorChanged();
    partial void OnEPontaoChanging(System.Nullable<bool> value);
    partial void OnEPontaoChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    partial void OnCabecalhoChanging(System.Data.Linq.Binary value);
    partial void OnCabecalhoChanged();
    partial void OnObjetivoChanging(string value);
    partial void OnObjetivoChanged();
    partial void OnJustificativaChanging(string value);
    partial void OnJustificativaChanged();
    partial void OnEquipeChanging(string value);
    partial void OnEquipeChanged();
    partial void OnApresentacaoChanging(string value);
    partial void OnApresentacaoChanged();
    partial void OnContatoChanging(string value);
    partial void OnContatoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    #endregion
		
		public Ponto()
		{
			this._Banner = new EntitySet<Banner>(new Action<Banner>(this.attach_Banner), new Action<Banner>(this.detach_Banner));
			this._Video = new EntitySet<Video>(new Action<Video>(this.attach_Video), new Action<Video>(this.detach_Video));
			this._Evento = new EntitySet<Evento>(new Action<Evento>(this.attach_Evento), new Action<Evento>(this.detach_Evento));
			this._Galeria = new EntitySet<Galeria>(new Action<Galeria>(this.attach_Galeria), new Action<Galeria>(this.detach_Galeria));
			this._Newsletter = new EntitySet<Newsletter>(new Action<Newsletter>(this.attach_Newsletter), new Action<Newsletter>(this.detach_Newsletter));
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			this._Projeto = new EntitySet<Projeto>(new Action<Projeto>(this.attach_Projeto), new Action<Projeto>(this.detach_Projeto));
			this._UsuarioPonto = new EntitySet<UsuarioPonto>(new Action<UsuarioPonto>(this.attach_UsuarioPonto), new Action<UsuarioPonto>(this.detach_UsuarioPonto));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_NomeIdentificador", DbType="VarChar(20)")]
		public string NomeIdentificador
		{
			get
			{
				return this._NomeIdentificador;
			}
			set
			{
				if ((this._NomeIdentificador != value))
				{
					this.OnNomeIdentificadorChanging(value);
					this.SendPropertyChanging();
					this._NomeIdentificador = value;
					this.SendPropertyChanged("NomeIdentificador");
					this.OnNomeIdentificadorChanged();
				}
			}
		}
		
		[Column(Storage="_EPontao", DbType="Bit")]
		public System.Nullable<bool> EPontao
		{
			get
			{
				return this._EPontao;
			}
			set
			{
				if ((this._EPontao != value))
				{
					this.OnEPontaoChanging(value);
					this.SendPropertyChanging();
					this._EPontao = value;
					this.SendPropertyChanged("EPontao");
					this.OnEPontaoChanged();
				}
			}
		}
		
		[Column(Storage="_Logo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[Column(Storage="_Cabecalho", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Cabecalho
		{
			get
			{
				return this._Cabecalho;
			}
			set
			{
				if ((this._Cabecalho != value))
				{
					this.OnCabecalhoChanging(value);
					this.SendPropertyChanging();
					this._Cabecalho = value;
					this.SendPropertyChanged("Cabecalho");
					this.OnCabecalhoChanged();
				}
			}
		}
		
		[Column(Storage="_Objetivo", DbType="VarChar(8000)")]
		public string Objetivo
		{
			get
			{
				return this._Objetivo;
			}
			set
			{
				if ((this._Objetivo != value))
				{
					this.OnObjetivoChanging(value);
					this.SendPropertyChanging();
					this._Objetivo = value;
					this.SendPropertyChanged("Objetivo");
					this.OnObjetivoChanged();
				}
			}
		}
		
		[Column(Storage="_Justificativa", DbType="VarChar(8000)")]
		public string Justificativa
		{
			get
			{
				return this._Justificativa;
			}
			set
			{
				if ((this._Justificativa != value))
				{
					this.OnJustificativaChanging(value);
					this.SendPropertyChanging();
					this._Justificativa = value;
					this.SendPropertyChanged("Justificativa");
					this.OnJustificativaChanged();
				}
			}
		}
		
		[Column(Storage="_Equipe", DbType="VarChar(8000)")]
		public string Equipe
		{
			get
			{
				return this._Equipe;
			}
			set
			{
				if ((this._Equipe != value))
				{
					this.OnEquipeChanging(value);
					this.SendPropertyChanging();
					this._Equipe = value;
					this.SendPropertyChanged("Equipe");
					this.OnEquipeChanged();
				}
			}
		}
		
		[Column(Storage="_Apresentacao", DbType="VarChar(8000)")]
		public string Apresentacao
		{
			get
			{
				return this._Apresentacao;
			}
			set
			{
				if ((this._Apresentacao != value))
				{
					this.OnApresentacaoChanging(value);
					this.SendPropertyChanging();
					this._Apresentacao = value;
					this.SendPropertyChanged("Apresentacao");
					this.OnApresentacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Contato", DbType="VarChar(8000)")]
		public string Contato
		{
			get
			{
				return this._Contato;
			}
			set
			{
				if ((this._Contato != value))
				{
					this.OnContatoChanging(value);
					this.SendPropertyChanging();
					this._Contato = value;
					this.SendPropertyChanged("Contato");
					this.OnContatoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Banner", Storage="_Banner", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Banner> Banner
		{
			get
			{
				return this._Banner;
			}
			set
			{
				this._Banner.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Video", Storage="_Video", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Video> Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				this._Video.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Evento", Storage="_Evento", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Evento> Evento
		{
			get
			{
				return this._Evento;
			}
			set
			{
				this._Evento.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Galeria", Storage="_Galeria", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Galeria> Galeria
		{
			get
			{
				return this._Galeria;
			}
			set
			{
				this._Galeria.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Newsletter", Storage="_Newsletter", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Newsletter> Newsletter
		{
			get
			{
				return this._Newsletter;
			}
			set
			{
				this._Newsletter.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Noticia", Storage="_Noticia", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Produto", Storage="_Produto", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		[Association(Name="Ponto_Projeto", Storage="_Projeto", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<Projeto> Projeto
		{
			get
			{
				return this._Projeto;
			}
			set
			{
				this._Projeto.Assign(value);
			}
		}
		
		[Association(Name="Ponto_UsuarioPonto", Storage="_UsuarioPonto", ThisKey="Id", OtherKey="PontoId")]
		public EntitySet<UsuarioPonto> UsuarioPonto
		{
			get
			{
				return this._UsuarioPonto;
			}
			set
			{
				this._UsuarioPonto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Banner(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Banner(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Video(Video entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Video(Video entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Evento(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Evento(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Galeria(Galeria entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Galeria(Galeria entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Newsletter(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Newsletter(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_Projeto(Projeto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_Projeto(Projeto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
		
		private void attach_UsuarioPonto(UsuarioPonto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = this;
		}
		
		private void detach_UsuarioPonto(UsuarioPonto entity)
		{
			this.SendPropertyChanging();
			entity.Ponto = null;
		}
	}
	
	[Table(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private int _CategoriaId;
		
		private string _Nome;
		
		private string _Descricao;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnCategoriaIdChanging(int value);
    partial void OnCategoriaIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    #endregion
		
		public Produto()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_CategoriaId", DbType="Int NOT NULL")]
		public int CategoriaId
		{
			get
			{
				return this._CategoriaId;
			}
			set
			{
				if ((this._CategoriaId != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaIdChanging(value);
					this.SendPropertyChanging();
					this._CategoriaId = value;
					this.SendPropertyChanged("CategoriaId");
					this.OnCategoriaIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(5000)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Association(Name="Categoria_Produto", Storage="_Categoria", ThisKey="CategoriaId", OtherKey="Id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._CategoriaId = value.Id;
					}
					else
					{
						this._CategoriaId = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[Association(Name="Ponto_Produto", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Projeto")]
	public partial class Projeto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _Descricao;
		
		private System.Data.Linq.Binary _ImagemPequena;
		
		private System.Data.Linq.Binary _ImagemMedia;
		
		private System.Data.Linq.Binary _ImagemGrande;
		
		private System.Nullable<int> _PontoId;
		
		private EntityRef<Ponto> _Ponto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnImagemPequenaChanging(System.Data.Linq.Binary value);
    partial void OnImagemPequenaChanged();
    partial void OnImagemMediaChanging(System.Data.Linq.Binary value);
    partial void OnImagemMediaChanged();
    partial void OnImagemGrandeChanging(System.Data.Linq.Binary value);
    partial void OnImagemGrandeChanged();
    partial void OnPontoIdChanging(System.Nullable<int> value);
    partial void OnPontoIdChanged();
    #endregion
		
		public Projeto()
		{
			this._Ponto = default(EntityRef<Ponto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(8000)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Descricao", DbType="VarChar(8000)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemPequena", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemPequena
		{
			get
			{
				return this._ImagemPequena;
			}
			set
			{
				if ((this._ImagemPequena != value))
				{
					this.OnImagemPequenaChanging(value);
					this.SendPropertyChanging();
					this._ImagemPequena = value;
					this.SendPropertyChanged("ImagemPequena");
					this.OnImagemPequenaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemMedia", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemMedia
		{
			get
			{
				return this._ImagemMedia;
			}
			set
			{
				if ((this._ImagemMedia != value))
				{
					this.OnImagemMediaChanging(value);
					this.SendPropertyChanging();
					this._ImagemMedia = value;
					this.SendPropertyChanged("ImagemMedia");
					this.OnImagemMediaChanged();
				}
			}
		}
		
		[Column(Storage="_ImagemGrande", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImagemGrande
		{
			get
			{
				return this._ImagemGrande;
			}
			set
			{
				if ((this._ImagemGrande != value))
				{
					this.OnImagemGrandeChanging(value);
					this.SendPropertyChanging();
					this._ImagemGrande = value;
					this.SendPropertyChanged("ImagemGrande");
					this.OnImagemGrandeChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int")]
		public System.Nullable<int> PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Association(Name="Ponto_Projeto", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.Projeto.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.Projeto.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private System.Guid _UserIdMembership;
		
		private EntitySet<Noticia> _Noticia;
		
		private EntitySet<UsuarioPonto> _UsuarioPonto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnUserIdMembershipChanging(System.Guid value);
    partial void OnUserIdMembershipChanged();
    #endregion
		
		public Usuario()
		{
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			this._UsuarioPonto = new EntitySet<UsuarioPonto>(new Action<UsuarioPonto>(this.attach_UsuarioPonto), new Action<UsuarioPonto>(this.detach_UsuarioPonto));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_UserIdMembership", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserIdMembership
		{
			get
			{
				return this._UserIdMembership;
			}
			set
			{
				if ((this._UserIdMembership != value))
				{
					this.OnUserIdMembershipChanging(value);
					this.SendPropertyChanging();
					this._UserIdMembership = value;
					this.SendPropertyChanged("UserIdMembership");
					this.OnUserIdMembershipChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Noticia", Storage="_Noticia", ThisKey="Id", OtherKey="UsuarioId")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		[Association(Name="Usuario_UsuarioPonto", Storage="_UsuarioPonto", ThisKey="Id", OtherKey="UsuarioId")]
		public EntitySet<UsuarioPonto> UsuarioPonto
		{
			get
			{
				return this._UsuarioPonto;
			}
			set
			{
				this._UsuarioPonto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_UsuarioPonto(UsuarioPonto entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioPonto(UsuarioPonto entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[Table(Name="dbo.UsuarioPonto")]
	public partial class UsuarioPonto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PontoId;
		
		private int _UsuarioId;
		
		private EntityRef<Ponto> _Ponto;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPontoIdChanging(int value);
    partial void OnPontoIdChanged();
    partial void OnUsuarioIdChanging(int value);
    partial void OnUsuarioIdChanged();
    #endregion
		
		public UsuarioPonto()
		{
			this._Ponto = default(EntityRef<Ponto>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PontoId", DbType="Int NOT NULL")]
		public int PontoId
		{
			get
			{
				return this._PontoId;
			}
			set
			{
				if ((this._PontoId != value))
				{
					if (this._Ponto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPontoIdChanging(value);
					this.SendPropertyChanging();
					this._PontoId = value;
					this.SendPropertyChanged("PontoId");
					this.OnPontoIdChanged();
				}
			}
		}
		
		[Column(Storage="_UsuarioId", DbType="Int NOT NULL")]
		public int UsuarioId
		{
			get
			{
				return this._UsuarioId;
			}
			set
			{
				if ((this._UsuarioId != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIdChanging(value);
					this.SendPropertyChanging();
					this._UsuarioId = value;
					this.SendPropertyChanged("UsuarioId");
					this.OnUsuarioIdChanged();
				}
			}
		}
		
		[Association(Name="Ponto_UsuarioPonto", Storage="_Ponto", ThisKey="PontoId", OtherKey="Id", IsForeignKey=true)]
		public Ponto Ponto
		{
			get
			{
				return this._Ponto.Entity;
			}
			set
			{
				Ponto previousValue = this._Ponto.Entity;
				if (((previousValue != value) 
							|| (this._Ponto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponto.Entity = null;
						previousValue.UsuarioPonto.Remove(this);
					}
					this._Ponto.Entity = value;
					if ((value != null))
					{
						value.UsuarioPonto.Add(this);
						this._PontoId = value.Id;
					}
					else
					{
						this._PontoId = default(int);
					}
					this.SendPropertyChanged("Ponto");
				}
			}
		}
		
		[Association(Name="Usuario_UsuarioPonto", Storage="_Usuario", ThisKey="UsuarioId", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioPonto.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioPonto.Add(this);
						this._UsuarioId = value.Id;
					}
					else
					{
						this._UsuarioId = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
